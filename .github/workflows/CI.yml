name: CI
  push:
    branches:
      - main
    tags: '*'
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.3'
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
          # TODO: windows currently doesn't support some python libs used in AutoHOOT
          # - windows-latest
        arch:
          - x64
        exclude:
          # MacOS not available on x86
          - {os: 'macOS-latest', arch: 'x86'}
          # Only test all os on the latest release
          - {version: '1.3', os: 'windows-latest'}
          - {version: '1.3', os: 'macOS-latest'}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install the AutoHOOT Python library, its dependencies and set path.
        run: |
          git clone https://github.com/LinjianMa/AutoHOOT.git
          cd AutoHOOT
          git checkout julia
          python -m pip install --upgrade pip
          pip install .
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: Install AutoHOOT Julia library
        run: |
          julia -e '
            ENV["PYTHON"] = ENV["pythonLocation"] * "/bin/python"
            print(ENV["PYTHON"])
            using Pkg
            Pkg.add("PyCall")
            Pkg.build("PyCall")
            Pkg.add(PackageSpec(url="https://github.com/LinjianMa/AutoHOOT.jl.git"))'
      - name: Build the ITensornetworkAD library
        run: |
          julia -e '
            using Pkg
            Pkg.add(PackageSpec(path=pwd()))'
      - name: Test the ITensornetworkAD library
        run: |
          julia -e '
            using Pkg
            Pkg.test("ITensorNetworkAD")'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
